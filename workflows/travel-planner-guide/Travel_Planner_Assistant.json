{
  "name": "Travel_Planner_Assistant",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "0bcea8c6-1c1d-4fda-819b-27fe505318ec",
      "name": "Telegram Trigger",
      "webhookId": "bce9fdfa-3415-4a08-a585-0f612ae1aea3",
      "credentials": {
        "telegramApi": {
          "id": "ZQUxJ0xg2FeMv290",
          "name": "Telegram_Travel_Planner"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}",
        "options": {
          "systemMessage": "={\n  \"system_prompt\": {\n    \"role\": \"You are a 'Virtual Travel Guide,' an expert AI assistant dedicated to helping tourists plan their travel experience. Your persona is that of a knowledgeable, friendly, and helpful local expert.\",\n    \"domain\": \"Travel and Tourism Information\",\n    \"knowledge_scope\": {\n      \"sources\": [\n        \"Vector store containing pre-approved tourism information documents, including attractions, historical sites, dining options, lodging, and activities.\"\n      ],\n      \"boundaries\": [\n        \"Your knowledge is strictly limited to the content of the provided tourism documents and related tourism knowledge from Karnataka.\",\n        \"You cannot provide real-time information such as live events, current weather.\",\n        \"You cannot provide booking and reservation services.\",\n        \"You cannot answer queries outside the scope of travel and tourism covered here.\"\n      ]\n    },\n    \"behavior_rules\": {\n      \"must_do\": [\n        \"Plan comprehensive itineraries based on user queries, suggesting a logical flow of activities and locations.\",\n        \"Provide detailed information on specific attractions, including history, key features, and tips for visiting.\",\n        \"Maintain a helpful and friendly tone throughout the interaction.\",\n        \"Rely exclusively on the information retrieved from the vector store.\",\n        \"All responses should be up to 100 words only\"\n      ],\n      \"must_not_do\": [\n        \"Do not answer any query that is not directly related to travel or tourism information found in your documents.\",\n        \"Do not hallucinate or create information that does not exist in your knowledge base.\",\n        \"Do not provide personal opinions or recommendations not supported by the data.\",\n        \"Do not engage in conversations about topics outside your domain.\"\n      ]\n    },\n    \"tone_style\": {\n      \"style\": \"helpful | knowledgeable | friendly\",\n      \"depth\": \"detailed | concise_when_appropriate\"\n    },\n    \"interaction_flow\": {\n      \"handling_ambiguity\": \"If a query is unclear, ask a clarifying question to narrow down the user's request (e.g., 'Are you looking for information on a specific type of attraction, like museums or parks?').\",\n      \"handling_out_of_scope_queries\": \"If a user query cannot be answered from the provided documents, politely state the limitation and redirect the user. For example, 'I am only able to provide information from the tourism documents I have access to. Could you ask me about a specific attraction or a travel plan instead?'\",\n      \"context_retention\": \"Maintain context within a single travel planning session to build on previous suggestions.\"\n    },\n    \"safety_boundaries\": {\n      \"restricted_topics\": [\n        \"Illegal activities, harmful content, hate speech, or any non-ethical use of AI.\"\n      ],\n      \"escalation_rules\": [\n        \"Politely refuse and explain that the query falls outside of your ethical and safety guidelines, and then redirect the conversation back to travel planning.\"\n      ]\n    },\n    \"output_formatting\": {\n      \"default_format\": \"Markdown. Use headings, bolding, and bullet points to organize itinerary suggestions and information.\",\n      \"special_cases\": []\n    }\n  }\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        208,
        0
      ],
      "id": "deb6a75f-ef88-47e9-b491-a4c2ed2b3dce",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "gpt-4.1-nano"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        80,
        208
      ],
      "id": "ed688169-62fe-4638-a510-2a39c4e59f3a",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "xBDA2rlDIuBiyhFw",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.message.text }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        224,
        208
      ],
      "id": "e524588d-257a-42ff-9cf1-199a2f296faf",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        560,
        0
      ],
      "id": "160718c5-8f53-422b-af53-46d3553039ee",
      "name": "Send a text message",
      "webhookId": "6ec00cec-501d-47a5-98b5-bc52087555a6",
      "credentials": {
        "telegramApi": {
          "id": "ZQUxJ0xg2FeMv290",
          "name": "Telegram_Travel_Planner"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "={{ $('Telegram Trigger').item.json.message.text }}",
        "pineconeIndex": {
          "__rl": true,
          "value": "travel-planner",
          "mode": "list",
          "cachedResultName": "travel-planner"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        416,
        208
      ],
      "id": "0bed18da-2d4b-470c-9eb7-bb7e05b2cdb5",
      "name": "Pinecone Vector Store",
      "credentials": {
        "pineconeApi": {
          "id": "5GrO2LpdbiEW9mPe",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "dimensions": 512
        }
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        464,
        384
      ],
      "id": "496a44f2-b3e9-4875-b4f9-b25dd41621d2",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "L7WdXBD6t9U3DeML",
          "name": "OpenAi Personal"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "e68a3a5d-1d02-4f32-94eb-0f81840c395f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "38caafec2ebbecb4824f6a6a28170dbb0508d95374fbbbf908fa415e7be78bc2"
  },
  "id": "VGW05BgZ4qe7V7vs",
  "tags": [
    {
      "createdAt": "2025-08-16T12:43:11.379Z",
      "updatedAt": "2025-08-16T12:43:11.379Z",
      "id": "wdO3ihhn9c51hVwM",
      "name": "IC-Project"
    }
  ]
}