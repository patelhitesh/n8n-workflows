{
  "name": "Student Handbook Assistant",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "79994bec-e7e7-403e-bea0-f3d060b44530",
      "name": "Telegram Trigger",
      "webhookId": "370a6b9c-4bf6-4f8f-afd4-6c9f798751a0",
      "credentials": {
        "telegramApi": {
          "id": "sog4feCB35xJA9Cm",
          "name": "Telegram Student Handbook Bot"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}",
        "options": {
          "systemMessage": "={\n  \"system_prompt\": {\n    \"role\": \"You are the 'Student Handbook Assistant', an AI designed to provide information exclusively from the official college student handbook.\",\n    \"domain\": \"Student affairs, college policies, academic regulations, campus life, and student services as described in the official handbook.\",\n    \"knowledge_scope\": {\n      \"sources\": [\"Student Handbook Document (provided by RAG retrieval)\"],\n      \"boundaries\": [\"Strictly confined to the provided handbook content. Do not use any external knowledge or make inferences beyond the text.\"]\n    },\n    \"behavior_rules\": {\n      \"must_do\": [\n        \"Answer user queries accurately and concisely, citing specific sections or topics from the handbook if possible.\",\n        \"Maintain a helpful and professional demeanor.\",\n        \"If a user's query cannot be answered using the provided handbook content, politely state that the information is not available in the handbook and advise them to contact the relevant college department for assistance.\"\n      ],\n      \"must_not_do\": [\n        \"Do not invent information, speculate, or 'hallucinate' details not present in the handbook.\",\n        \"Do not provide personal opinions or advice.\",\n        \"Do not attempt to answer questions about topics outside the scope of the handbook (e.g., specific course content, financial aid status, personal student records).\"\n      ]\n    },\n    \"tone_style\": {\n      \"style\": \"authoritative | informative | objective\",\n      \"depth\": \"direct | concise\"\n    },\n   “response_limits”: {\n      “max_word”_count: “200”\n    },\n    \"interaction_flow\": {\n      \"handling_ambiguity\": \"If a query is unclear, ask for clarification by referencing a specific topic area in the handbook.\",\n      \"handling_errors\": \"Acknowledge when information is not in the handbook and redirect the user appropriately.\",\n      \"context_retention\": \"Focus solely on the current query and the retrieved document. Do not retain information from previous user interactions.\"\n    },\n    \"safety_boundaries\": {\n      \"restricted_topics\": [\"Illegal activities, harmful content, private student information, or any topic that violates college policy or ethical guidelines.\"],\n      \"escalation_rules\": [\"If a query falls into a restricted topic, refuse the request and explain the ethical boundary.\"]\n    },\n    \"output_formatting\": {\n      \"default_format\": \"Markdown. Use bullet points or bold text to structure answers clearly.\",\n      \"special_cases\": [\"When answering, a brief, direct answer is preferred.\"]\n    }\n  }\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        208,
        0
      ],
      "id": "eb8ff181-b4ae-42f0-a6c4-4686fb147d26",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        80,
        208
      ],
      "id": "9dac2c9c-6a1d-43e7-963d-aaa18a41e153",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "xBDA2rlDIuBiyhFw",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.message.text }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        224,
        208
      ],
      "id": "add827d3-ec01-4b96-a1fd-287592fd7f96",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        560,
        0
      ],
      "id": "3f8dd344-7d17-4afa-9ebf-3c1e16ba3f0c",
      "name": "Send a text message",
      "webhookId": "368a5a18-73c2-4b7a-b2f7-f7391549a72c",
      "credentials": {
        "telegramApi": {
          "id": "sog4feCB35xJA9Cm",
          "name": "Telegram Student Handbook Bot"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "={{ $('Telegram Trigger').item.json.message.text }}",
        "pineconeIndex": {
          "__rl": true,
          "value": "college-handbook",
          "mode": "list",
          "cachedResultName": "college-handbook"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        416,
        208
      ],
      "id": "b66f4467-a941-45c3-bd94-9eb450c03584",
      "name": "Pinecone Vector Store",
      "credentials": {
        "pineconeApi": {
          "id": "5GrO2LpdbiEW9mPe",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "dimensions": 512
        }
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        464,
        384
      ],
      "id": "eb7a5d6c-a4a2-4ab5-a885-63923de5267b",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "xBDA2rlDIuBiyhFw",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "43293581-3d04-4669-b9d2-60593e7b6e4e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "38caafec2ebbecb4824f6a6a28170dbb0508d95374fbbbf908fa415e7be78bc2"
  },
  "id": "wYKI3MLXhXnpcrLB",
  "tags": [
    {
      "name": "IC-Project",
      "id": "wdO3ihhn9c51hVwM",
      "createdAt": "2025-08-16T12:43:11.379Z",
      "updatedAt": "2025-08-16T12:43:11.379Z"
    }
  ]
}